Index: pixman/pixman/pixman-arm-neon-asm.S
===================================================================
--- pixman.orig/pixman/pixman-arm-neon-asm.S	2013-03-18 03:00:50.000000000 +0200
+++ pixman/pixman/pixman-arm-neon-asm.S	2013-03-18 03:03:49.000000000 +0200
@@ -461,6 +461,16 @@
     pixman_composite_src_8888_0565_process_pixblock_tail, \
     pixman_composite_src_8888_0565_process_pixblock_tail_head
 
+generate_composite_function_single_scanline \
+    pixman_store_scanline_r5g6b5_asm_neon, 32, 0, 16, \
+    FLAG_DST_WRITEONLY | FLAG_DEINTERLEAVE_32BPP, \
+    8, /* number of pixels, processed in a single block */ \
+    default_init, \
+    default_cleanup, \
+    pixman_composite_src_8888_0565_process_pixblock_head, \
+    pixman_composite_src_8888_0565_process_pixblock_tail, \
+    pixman_composite_src_8888_0565_process_pixblock_tail_head
+
 /******************************************************************************/
 
 .macro pixman_composite_src_0565_8888_process_pixblock_head
@@ -496,6 +506,16 @@
     pixman_composite_src_0565_8888_process_pixblock_tail, \
     pixman_composite_src_0565_8888_process_pixblock_tail_head
 
+generate_composite_function_single_scanline \
+    pixman_fetch_scanline_r5g6b5_asm_neon, 16, 0, 32, \
+    FLAG_DST_WRITEONLY | FLAG_DEINTERLEAVE_32BPP, \
+    8, /* number of pixels, processed in a single block */ \
+    default_init, \
+    default_cleanup, \
+    pixman_composite_src_0565_8888_process_pixblock_head, \
+    pixman_composite_src_0565_8888_process_pixblock_tail, \
+    pixman_composite_src_0565_8888_process_pixblock_tail_head
+
 /******************************************************************************/
 
 .macro pixman_composite_add_8_8_process_pixblock_head
Index: pixman/pixman/pixman-arm-neon.c
===================================================================
--- pixman.orig/pixman/pixman-arm-neon.c	2013-03-18 03:04:05.000000000 +0200
+++ pixman/pixman/pixman-arm-neon.c	2013-03-18 03:05:43.000000000 +0200
@@ -455,6 +455,42 @@
 BIND_COMBINE_U (add)
 BIND_COMBINE_U (out_reverse)
 
+void
+pixman_fetch_scanline_r5g6b5_asm_neon (int             width,
+                                       uint32_t       *buffer,
+                                       const uint16_t *pixel);
+void
+pixman_store_scanline_r5g6b5_asm_neon (int             width,
+                                       uint16_t       *pixel,
+                                       const uint32_t *values);
+
+static void
+neon_fetch_scanline_r5g6b5 (pixman_image_t *image,
+                            int             x,
+                            int             y,
+                            int             width,
+                            uint32_t *      buffer,
+                            const uint32_t *mask)
+{
+    const uint32_t *bits = image->bits.bits + y * image->bits.rowstride;
+    const uint16_t *pixel = (const uint16_t *)bits + x;
+
+    pixman_fetch_scanline_r5g6b5_asm_neon (width, buffer, pixel);
+}
+
+static void
+neon_store_scanline_r5g6b5 (bits_image_t *  image,
+                            int             x,
+                            int             y,
+                            int             width,
+                            const uint32_t *values)
+{
+    uint32_t *bits = image->bits + image->rowstride * y;
+    uint16_t *pixel = ((uint16_t *) bits) + x;
+
+    pixman_store_scanline_r5g6b5_asm_neon (width, pixel, values);
+}
+
 pixman_implementation_t *
 _pixman_implementation_create_arm_neon (pixman_implementation_t *fallback)
 {
@@ -465,6 +501,10 @@
     imp->combine_32[PIXMAN_OP_ADD] = neon_combine_add_u;
     imp->combine_32[PIXMAN_OP_OUT_REVERSE] = neon_combine_out_reverse_u;
 
+    _pixman_bits_override_accessors (PIXMAN_r5g6b5,
+                                     neon_fetch_scanline_r5g6b5,
+                                     neon_store_scanline_r5g6b5);
+
     imp->blt = arm_neon_blt;
     imp->fill = arm_neon_fill;
 
